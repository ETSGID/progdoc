<script src="<%=CONTEXT%>/js/libraries/datepicker.js"></script>
<link rel='stylesheet' type="text/css" href='<%=CONTEXT%>/stylesheets/datepicker.css' />
<script src="<%=CONTEXT%>/js/libraries/moment.js"></script>
<%- include ../menus/cumplimentar.ejs %>
<%- include ../../public/js/funciones.ejs %>
<div class="contenido2">
<% if (locals.estado && locals.estado !== null) { %>
  <p><%=estado%></p>
<%}else if(locals.existe && locals.existe !== null){%>
  <p><%=existe%></p>
<%}else if(locals.permisoDenegado && locals.permisoDenegado !== null){%>
    <% switch(estadoExamenes){
      case estadosExamen.abierto : %>
        <p>Los exámenes están siendo cubiertos por el coordinador del plan de estudios</p>
        <% break;
      case estadosExamen.aprobadoCoordinador : %>
        <p>Los exámenes han sido aprobados por el coordinador del plan de estudios</p>
        <% break;
      default:
      break;
    }%> 
  <p><%=permisoDenegado%></p>
  </br>
  <p>Permisos en función del estado</p>
  <ul>
    <li>Abierto: el coordinador del plan de estudios </li>
    <li>Aprobado: nadie tiene permiso </li>
    <li>Incidencia: el jefe de estudios</li>
  </ul>
<%}else{%>
        <form id="formulario" role="form" data-toggle="validator" autocomplete="off" action="<%=aprobarpath%>" method="post">
                <div>
                    <% for (let i=0 ; i<asignacionsExamen.length; i++){%>
                        <h2><%= asignacionsExamen[i].periodoNombre %>
                        <button type="button" class="btn btn-default" onclick = "MostrarOcultar('div_<%=asignacionsExamen[i].periodo%>')">
                        <span id ='button_div_<%=asignacionsExamen[i].periodo%>'  class="glyphicon glyphicon-chevron-down"></span> 
                        </button>
                        <button type="button" id='buttonCalendario_div_<%=asignacionsExamen[i].periodo%>' class="btn btn-default hidden" onclick = "mostrarCalendario('calendario_<%=asignacionsExamen[i].periodo%>')">
                        Modo Calendario
                        </button>
                        <div class="dropdown" style="display: inline-block;">
                            <button class="btn btn-default dropdown-toggle hidden" type="button" id='buttonMoverCal_div_<%=asignacionsExamen[i].periodo%>'
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-placement="right" title="Sólo en Modo Calendario" 
                                disabled>
                                <span class="glyphicon glyphicon-pencil"></span>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="buttonMoverCal_div_<%=asignacionsExamen[i].periodo%>">
                                <li><a data-toggle="modal" data-target="#modal-rotar_<%=asignacionsExamen[i].periodo%>" style="cursor: pointer;">Rotar</a></li>
                                <li><a data-toggle="modal" data-target="#modal-desplazar_<%=asignacionsExamen[i].periodo%>" style="cursor: pointer;">Desplazar</a></li>
                              </ul>
                        </div>
                        </h2>
                        <div class="modal modal-rotar fade" id="modal-rotar_<%=asignacionsExamen[i].periodo%>" tabindex="-1" role="dialog"
                            aria-labelledby="modal-rotar_<%=asignacionsExamen[i].periodo%>">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <h3 class="modal-title">Rotar exámenes</h3>
                                    </div>
                                    <div class="modal-body">
                                        Desplaza cada examen a la fecha en la que se encuentra el siguiente o el anterior.
                                        <hr>
                                        <div class="form-group">
                                            Sentido de la rotación:
                                            <br>
                                            <div class="row">
                                                <div class="col-xs-6">
                                                    <input type="radio" class="sentido-rotacion" name="<%=asignacionsExamen[i].periodo%>_sentido-rotacion" value="1">
                                                    <label for="adelante">Hacia adelante</label>
                                                </div>
                                                <div class="col-xs-6">
                                                    <input type="radio" class="sentido-rotacion" name="<%=asignacionsExamen[i].periodo%>_sentido-rotacion" value="0">
                                                    <label for="atras">Hacia atrás</label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            Cursos(s) a rotar:
                                            <br>
                                            <% if (cursos.length == 1) { %>
                                                <input type="checkbox" class="cursos-rotacion" name="<%=asignacionsExamen[i].periodo%>_cursos-rotacion"
                                                    value="<%=curso[0]%>" checked readonly>
                                                <label for="<%=cursos[0]%>"><%=curso[0]%></label>
                                            <% } else { %>
                                                <div class="row">
                                                <% cursos.forEach(curso => {%>
                                                    <div class="col-xs-2">
                                                        <input type="checkbox" class="cursos-rotacion" name="<%=asignacionsExamen[i].periodo%>_cursos-rotacion"
                                                            value="<%=curso%>">
                                                        <label for="<%=curso%>"><%=curso%></label>
                                                    </div>
                                                <%}) %>
                                                </div>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                                        <button type="button" class="btn btn-primary rotar-submit" data-dismiss="modal"
                                            onclick="rotarExamenes('<%=asignacionsExamen[i].periodo%>')">Rotar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal modal-desplazar fade" id="modal-desplazar_<%=asignacionsExamen[i].periodo%>" tabindex="-1" role="dialog"
                            aria-labelledby="modal-desplazar_<%=asignacionsExamen[i].periodo%>">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <h3 class="modal-title">Desplazar exámenes</h3>
                                    </div>
                                    <div class="modal-body">
                                        Adelanta o atrasa los exámanes del (los) curso(s) señalados el número de días indicados.
                                        <hr>
                                        <div class="form-group">
                                            Número de días (hábiles) a desplazar:
                                            <br>
                                            <input type="number" class="dias-desplazamiento" name="<%=asignacionsExamen[i].periodo%>_dias-desplazamiento"
                                                min="1" max="15" value="1">
                                            <p class="note-text">Los exámenes en fin de semana empezarán a contar a partir del primer día hábil.</p>
                                        </div>
                                        <div class="form-group">
                                            Sentido del cambio:
                                            <br>
                                            <div class="row">
                                                <div class="col-xs-6">
                                                    <input type="radio" class="sentido-desplazamiento" name="<%=asignacionsExamen[i].periodo%>_sentido-desplazamiento"
                                                        value="1">
                                                    <label for="adelante">Hacia adelante</label>
                                                </div>
                                                <div class="col-xs-6">
                                                    <input type="radio" class="sentido-desplazamiento" name="<%=asignacionsExamen[i].periodo%>_sentido-desplazamiento"
                                                        value="0">
                                                    <label for="atras">Hacia atrás</label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            Cursos(s) a desplazar:
                                            <br>
                                            <% if (cursos.length == 1) { %>
                                                <input type="checkbox" class="cursos-desplazamiento" name="<%=asignacionsExamen[i].periodo%>_cursos-desplazamiento"
                                                    value="<%=curso[0]%>" checked readonly>
                                                <label for="<%=cursos[0]%>"><%=curso[0]%></label>
                                            <% } else { %>
                                                <div class="row">
                                                <% cursos.forEach(curso => {%>
                                                    <div class="col-xs-2">
                                                        <input type="checkbox" class="cursos-desplazamiento" name="<%=asignacionsExamen[i].periodo%>_cursos-desplazamiento"
                                                            value="<%=curso%>">
                                                        <label for="<%=curso%>"><%=curso%></label>
                                                    </div>
                                                <%}) %>
                                                </div>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                                        <button type="button" class="btn btn-primary rotar-submit" data-dismiss="modal"
                                            onclick="desplazarExamenes('<%=asignacionsExamen[i].periodo%>')">Desplazar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="hidden" id="div_<%=asignacionsExamen[i].periodo%>">
                            <div id="div_<%=franjasExamen[i].periodo%>">
                                <% 
                                let period = franjasExamen.find(function (obj) { return obj.periodo === asignacionsExamen[i].periodo; });
                                if (period.franjas.length>0){%>
                                    <table class="table" id="tableFranjas_<%=period.periodo%>">
                                        <tr>
                                        <th>Franja</th>
                                        <th>Hora Inicio</th>
                                        <th>Duración (Minutos)</th>
                                        </tr>
                                    <%for (let j=0 ; j<period.franjas.length; j++){%>
                                        <tr id="fila_<%=period.franjas[j].identificador%>">
                                            <%
                                            let hora= +period.franjas[j].horaInicio.split(':')[0]
                                            let minutos = +period.franjas[j].horaInicio.split(':')[1]
                                            let duracion = period.franjas[j].duracion
                                            if(!hora)hora=8;
                                            if(!minutos)minutos=0;
                                            if(!duracion)duracion=0;
                                            if(parseInt(hora,10)<10)hora='0'+hora;
                                            if(parseInt(minutos,10)<10)minutos='0'+minutos;
                                                %>
                                            <td><%=j+1%></td>
                                            <td><%=hora%>:<%=minutos%></td>
                                            <td><%=duracion%></td>
                                        </tr>
                                    <%}%>
                                </table>
                                <%}else{%>
                                <p>No hay franjas de exámenes definidas</p>
                                <%}%>
                            </div>
                            <table class="table" id="table_<%=asignacionsExamen[i].periodo%>">
                                <thead>
                                    <tr>
                                    <th scope="col">Asignatura</th>
                                    <th scope="col">Curso</th>
                                    <th scope="col">Fecha</th>
                                    <th scope="col">Franja</th>
                                    <th>Hora Inicio</th>
                                    <th>Duración (Minutos)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                <% for (let j=0 ; j<asignacionsExamen[i].asignaturas.length; j++){
                                    let f = "DD/MM/YYYY"
                                        if (asignacionsExamen[i].asignaturas[j].examen.fecha !== null){ 
                                            f= asignacionsExamen[i].asignaturas[j].examen.fecha.split("-")[2]+"/"+asignacionsExamen[i].asignaturas[j].examen.fecha.split("-")[1]+"/"+asignacionsExamen[i].asignaturas[j].examen.fecha.split("-")[0]
                                        }
                                     let enable = f === "DD/MM/YYYY" ? "disabled": "enabled"
                                    %> 
                                <tr id="<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>">
                                    <th scope="row">
                                        <%if (asignacionsExamen[i].asignaturas[j].acronimo !== null){ %>
                                            <span title="<%=asignacionsExamen[i].asignaturas[j].nombre%> (<%=asignacionsExamen[i].asignaturas[j].codigo%>)"><%= asignacionsExamen[i].asignaturas[j].acronimo%></span>
                                        <% }else{%>
                                        <span  title="<%=asignacionsExamen[i].asignaturas[j].nombre%> (<%=asignacionsExamen[i].asignaturas[j].codigo%>)"><%= asignacionsExamen[i].asignaturas[j].codigo%></span>
                                        <% } %> 
                                    </th>
                                    <td>
                                        <%= asignacionsExamen[i].asignaturas[j].curso%>
                                    </td>
                                    <td>
                                        <input class="form-control dateExamen<%=asignacionsExamen[i].periodo%>" value="<%=f%>" name="date_<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>" id="date_<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>"  placeholder="<%=f%>" type="text" onchange="Change('<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>')" readonly="readonly"/>    
                                    </td>
                                    <td>
                                    <%if (period.franjas.length>0){%>
                                        <select id='franja_<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>'  onchange="cambiarFranjaExamen('<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>')" <%=enable%>>
                                        <option value="-">-</option>
                                        <%for (let k=0 ; k<period.franjas.length; k++){%>
                                        <option value="<%=k+1%>"><%=k+1%></option>
                                    <%}%>
                                        </select>
                                    <%}else{%>
                                    <select id='franja_<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>'  onchange="cambiarFranjaExamen('<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>')" <%=enable%>>
                                        <option value="-">-</option>
                                    </select>
                                    <%}%>
                                    </td>
                                     <%
                                    let hora= asignacionsExamen[i].asignaturas[j].examen.horaInicio ? +asignacionsExamen[i].asignaturas[j].examen.horaInicio.split(':')[0] : null
                                    let minutos = asignacionsExamen[i].asignaturas[j].examen.horaInicio ? +asignacionsExamen[i].asignaturas[j].examen.horaInicio.split(':')[1]:null
                                    let duracion = asignacionsExamen[i].asignaturas[j].examen.duracion ? asignacionsExamen[i].asignaturas[j].examen.duracion : null
                                    if(parseInt(hora,10)<10)hora='0'+hora;
                                    if(parseInt(minutos,10)<10)minutos='0'+minutos;
                                        %>
                                     <td><input type="number" min='0' max='23' id='hora_<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>'   name='hora_<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>' placeholder="hh" value="<%=hora%>" onChange="formatHora(this);Change2('<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>')" <%=enable%>><b>:</b>
                                    <input type="number"  min='0' max='59' id='minutos_<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>' name='minutos_<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>' placeholder="mm" value="<%=minutos%>" onChange="formatHora(this);Change2('<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>')" <%=enable%>>
                                    </td>
                                    <td><input type="number" min='0' max='500' id='duracion_<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>' name='duracion_<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>' placeholder="mm" value="<%=duracion%>" onChange="Change2('<%=asignacionsExamen[i].asignaturas[j].identificador%>_<%=asignacionsExamen[i].asignaturas[j].examen.identificador%>_<%=asignacionsExamen[i].periodo%>')" <%=enable%>></td>
                                </tr>
                                <%}%>
                                </tbody>
                            </table>
                            <table class="table table-bordered" style="display: none;" id="table_calendario_<%=asignacionsExamen[i].periodo%>">
                                <thead>
                                    <tr>
                                    <th scope="col">Día</th>
                                    <% for (let k=0 ; k<cursos.length; k++){%>
                                        <th scope="col">Curso <%=cursos[k]%></th>
                                    <%}%> 
                                    </tr>
                                </thead>
                                <tbody id="body_table_calendario_<%=asignacionsExamen[i].periodo%>">
                                </tbody>
                            </table>
                        </div>
                    <%}%>
                </div>
        </form>
    <%}%>

</div>
<script>
let periodos = <%-JSON.stringify(periodosExamen)%>;
let franjas = <%-JSON.stringify(franjasExamen)%>;
let pdID = <%-JSON.stringify(pdID)%>;
let cursos = <%-JSON.stringify(cursos)%>;
//el multiselect del layout funciona con jquery
let estado = <%-JSON.stringify(estado)%>
let asignacionsExamen = <%-JSON.stringify(asignacionsExamen)%>;
let estadoProgDoc = <%-JSON.stringify(estadoProgDoc)%>;
let estadosProgDoc = <%-JSON.stringify(estadosProgDoc)%>;
let confirmarSalirSinGuardarArrays = <%-confirmarSalirSinGuardarArrays%>;
let formatHora = <%-formatHora%>;
let formatHoraNumber = <%-formatHoraNumber%>;
let aumentarDia = <%-aumentarDia%>;
let getDia = <%-getDia%>;
let anoInicial;
let anoFinal;
let fechasLimite;
//nuevos examenes a anadir se incluyen en el ultimo paso
let createExamens = [];
// examenes a actualizar se incluyen en el ultimo paso
let updateExamens = [];
// examenes a eliminar se incluyen en el ultimo paso
let deleteExamens = [];
//se utiliza para disparar el evento de onbeforeunload
let activado = true;
if(pdID && periodos){
anoInicial = 2000+ Number(pdID.split("_")[2][2]+""+pdID.split("_")[2][3])
anoFinal = 2000+ Number(pdID.split("_")[2][4]+""+pdID.split("_")[2][5])
//las fecha limite para poner los exámenes
fechasLimite ={S1_O:["01/09/"+anoInicial, "31/07/"+anoFinal], S1_E:["01/09/"+anoInicial, "31/07/"+anoFinal], 
S2_O:["01/09/"+anoInicial, "31/07/"+anoFinal], S2_E:["01/09/"+anoInicial, "31/07/"+anoFinal]}
}

//inicio el calendario
$(function() {
    asignacionsExamen.forEach(period => {
        period.asignaturas.forEach(asignatura => {
            if(asignatura.examen && asignatura.examen.identificador !== null){
                //ver si las asignaturas con examenes estan dentro de la franja correspondiente
                isExamenInFranjas(`${asignatura.identificador}_${asignatura.examen.identificador}_${period.periodo}`)
            }
        })
    })
    
    if(pdID && periodos){

        $('.dateExamen'+periodos.S1_O).datepicker({
            language: "es",
            keyboardNavigation: false,
            todayHighlight: true,
            autoclose: true,
            format: "dd/mm/yyyy",
            clearBtn: true,
            startDate: fechasLimite.S1_O[0],
            endDate: fechasLimite.S1_O[1],
            daysOfWeekDisabled:[0]
            
        });
        $('.dateExamen'+periodos.S1_E).datepicker({
            language: "es",
            keyboardNavigation: false,
            todayHighlight: true,
            autoclose: true,
            format: "dd/mm/yyyy",
            clearBtn: true,
            startDate: fechasLimite.S1_E[0],
            endDate: fechasLimite.S1_E[1],
            daysOfWeekDisabled:[0]
            
        });
        $('.dateExamen'+periodos.S2_O).datepicker({
            language: "es",
            keyboardNavigation: false,
            todayHighlight: true,
            autoclose: true,
            format: "dd/mm/yyyy",
            clearBtn: true,
            startDate: fechasLimite.S2_O[0],
            endDate: fechasLimite.S2_O[1],
            daysOfWeekDisabled:[0]


            
        });
        $('.dateExamen'+periodos.S2_E).datepicker({
            language: "es",
            keyboardNavigation: false,
            todayHighlight: true,
            autoclose: true,
            format: "dd/mm/yyyy",
            clearBtn: true,
            startDate: fechasLimite.S2_E[0],
            endDate: fechasLimite.S2_E[1],
            daysOfWeekDisabled:[0]
            
        });     
    }
   
}); 


function isExamenInFranjas(examenId){
    let rowsSolapa = false;
    let period = franjas.find(function (obj) { return obj.periodo === examenId.split("_")[2]; });
    let hora = +document.getElementsByName("hora_"+examenId)[0].value;
    let minutos = +document.getElementsByName("minutos_"+examenId)[0].value;
    let duracion = +document.getElementsByName("duracion_"+examenId)[0].value;
    let horaInicial = moment.duration(hora+":"+minutos)
    let horaFinal = (moment.duration(hora+":"+minutos).add(duracion,"m"));
    if(period.franjas.length === 0){
        //en este caso no hay franjas
       if(!isNaN(hora) && hora !== 0 && !isNaN(minutos) && !isNaN(duracion) && horaInicial.isValid() && horaFinal.isValid()){
        document.getElementById(examenId).classList.remove("solapa");
        return true;
       }    
        document.getElementById(examenId).classList.add("solapa");
        return false;
    }
    document.getElementById(examenId).classList.add("solapa");
    for (let i=0; i<period.franjas.length; i++){    
            //encaja con un examen si la horaInicial es posterior o igual a la hora inicial de la period
            //y la hora final es anterior o igual a la hora de la period
            if((horaInicial - moment.duration(period.franjas[i].horaInicio) >= 0)&&
            (horaFinal - moment.duration(period.franjas[i].horaInicio).add(period.franjas[i].duracion, "m") <=0)) {
                document.getElementById('franja_'+examenId).value = i+1;
                document.getElementById(examenId).classList.remove("solapa");
                return i+1;     
        }
    }
    document.getElementById('franja_'+examenId).value = "-";
    return false;
}


function Change(id){
    let asignaturaId = id.split('_')[0];
    let examenId = id.split('_')[1];
    let periodName = id.split('_')[2];
    let element = document.getElementById("date_"+id);
    let hora = document.getElementById("hora_"+id);
    let minutos = document.getElementById("minutos_"+id);
    let duracion = document.getElementById("duracion_"+id);
    let franja = document.getElementById("franja_"+id);
    let examenPeriods = asignacionsExamen.find(period => period.periodo === periodName)
    let examen = examenPeriods.asignaturas.find(asignatura => asignatura.identificador == asignaturaId).examen
    //si se borra la fecha se borra el examen
    if (element.value === element.placeholder || element.value === ""){
        element.placeholder = "DD/MM/YYYY"
        hora.disabled = true;
        minutos.disabled = true;
        duracion.disabled = true;
        franja.value="-"
        franja.disabled = true;
        examen.fecha = null;
        document.getElementById(id).classList.remove("solapa");
    //si se anade/actualiza fecha    
    }else{
        hora.disabled = false;
        minutos.disabled = false;
        duracion.disabled = false;
        franja.disabled = false;
        examen.fecha = element.value;
        //si ya existia en la base de datos se marca actualizar a true
        // para asi evitar actualizar todos
        if(examenId !== ''){
            examen.actualizar = true;
        }
        isExamenInFranjas(id)
    }
}

//cuando cambia la hora los minutos o la duracion
function Change2(id){
    let asignaturaId = id.split('_')[0];
    let examenId = id.split('_')[1];
    let periodName = id.split('_')[2];
    let hora = document.getElementById("hora_"+id).value;
    let minutos = document.getElementById("minutos_"+id).value;
    let duracion = document.getElementById("duracion_"+id).value;
    let element = document.getElementById("date_"+id).value;
    let examenPeriods = asignacionsExamen.find(period => period.periodo === periodName)
    let examen = examenPeriods.asignaturas.find(asignatura => asignatura.identificador == asignaturaId).examen
    if (isNaN(minutos) || minutos === ''){
        minutos = '0';
    }
    if (isNaN(hora) || hora === ''){
        examen.horaInicio = null
    }else{
        examen.horaInicio = formatHoraNumber(hora)+':'+ formatHoraNumber(minutos)+':00';
    } 
    if (isNaN(duracion) || duracion === ''){
        duracion = '0'
    }
    examen.duracion = duracion;
    examen.fecha = element;
    //si ya existia en la base de datos se marca actualizar a true
    // para asi evitar actualizar todos
    if(examenId !== ''){
            examen.actualizar = true;
    }
    isExamenInFranjas(id)
}


function MostrarOcultar(id){
    let div = document.getElementById(id);
    let buttonSpan = document.getElementById('button_'+id)
    let buttonCalendario = document.getElementById('buttonCalendario_'+id)
    let buttonMoverCal = document.getElementById('buttonMoverCal_' + id)
    let clases = div.className.split(" ");
    let clases2 = buttonCalendario.className.split(" ");
    let clases3 = buttonMoverCal.className.split(" ");
    let oculto = clases.find(function (obj) { return obj === 'hidden'});
    //si estaba oculto debo quitarlo
    if (oculto){
        div.className = "";
        buttonCalendario.className = "";
        buttonMoverCal.className = "";
        for (let i =0; i<clases.length; i++){
            if (clases[i] !== 'hidden'){
                div.className += " " +clases[i]
            }    
        }
        for (let i =0; i<clases2.length; i++){
            if (clases2[i] !== 'hidden'){
                buttonCalendario.className += " " + clases2[i]
            }    
        }
        for (let i =0; i<clases3.length; i++){
            if (clases3[i] !== 'hidden'){
                buttonMoverCal.className += " " + clases3[i]
            }    
        }
        
        buttonSpan.className = "glyphicon glyphicon-chevron-up"
    }
    //debo ocultarlo
    else{
        div.className += " hidden"
        buttonCalendario.className += " hidden"
        buttonMoverCal.className += " hidden"
        buttonSpan.className = "glyphicon glyphicon-chevron-down"

    }

}

function mostrarCalendario(id, repaint){
    let estadoExamenes=[];
    let table = document.getElementById("table_"+id);
    let tableBody = document.getElementById("body_table_"+id);
    let cellsOfRow="";
    let found=false;
    let periodo = id.split("_")[1]
    let period = franjas.find(function (obj) { return obj.periodo === periodo });
    //compruebo sinFranjas porque cuando no hay franjas period.franjas.length seria 0 y no entraria en el bucle
    let sinFranjas = period.franjas.length === 0 ? 1 : 0;
    let numFranjas =  period.franjas.length === 0 ? 1 : period.franjas.length;
    let tableDatos = document.getElementById("table_"+periodo)
    let buttonCalendario = document.getElementById('buttonCalendario_div_'+periodo)
    let buttonMoverCal = document.getElementById('buttonMoverCal_div_'+periodo)
    let text = buttonCalendario.innerHTML.trim();
    let primeroEncontrado = false;
    let ultimoEncontrado = false;
    let periodoKey;
    for(let i in periodos){
        if(periodos[i] === periodo){
            periodoKey = i;
        }
    }

    // Recorremos todas las filas con contenido de la tabla en la que metemos los datos
    for (let j = 1; j < tableDatos.rows.length; j++){
        cellsOfRow = tableDatos.rows[j].getElementsByTagName('th');
        cellsOfRow2 = tableDatos.rows[j].getElementsByTagName('td');
        // Recorremos todas las celdas de la fila que me interesan
        let nuevoExamen = {};
        nuevoExamen.asignatura = cellsOfRow[0].innerHTML.trim();
        nuevoExamen.curso = cellsOfRow2[0].innerHTML.trim();
        nuevoExamen.asignaturaNombre = cellsOfRow[0].title
        nuevoExamen.franja = ""+cellsOfRow2[2].children[0].value
        cellsOfRow2[1].children[0].value.trim() === "" ? nuevoExamen.fecha = cellsOfRow2[1].children[0].placeholder : nuevoExamen.fecha =cellsOfRow2[1].children[0].value;
        estadoExamenes.push(nuevoExamen);
    }
    let fechaLimiteInicio = fechasLimite[periodoKey][0]
    let fechaLimiteFinal = fechasLimite[periodoKey][1]
    if(text === 'Modo Calendario' || repaint){
        //borro lo que había en el body para repintarlo
        while (tableBody.firstChild) {
            tableBody.removeChild(tableBody.firstChild);
        }
        let fechaFila = fechaLimiteInicio
        // Recorremos todas las filas con contenido de la tabla
        while (fechaFila !== aumentarDia(fechaLimiteFinal,1)){
            if(!primeroEncontrado){
                let coincidenciasFecha = estadoExamenes.filter(
                //me devuelve 8 y la bbdd de datos 08 por eso lo de 0+l
                ex => (ex.fecha === fechaFila)
                );
                coincidenciasFecha.length === 0 ? primeroEncontrado = false : primeroEncontrado = true;
                //pinta el mes en la primera fila que tiene examenes excepto si es 1 que lo pinta abajo
                if (primeroEncontrado && getDia(fechaFila)[2] !== 1){
                let rowMes = tableBody.insertRow();
                rowMes.classList.add("noExamen")
                let cellMes = rowMes.insertCell();
                cellMes.colSpan=""+(cursos.length+1);
                cellMes.style.textAlign="center"
                //pinto el mes
                cellMes.innerHTML = getDia(fechaFila)[1]
                }
            }
            if(primeroEncontrado){
                if(getDia(fechaFila)[2] === 1){
                    let rowMes = tableBody.insertRow();
                    rowMes.classList.add("noExamen")
                    let cellMes = rowMes.insertCell();
                    cellMes.colSpan=""+(cursos.length+1)
                    cellMes.style.textAlign="center"
                    //pinto el mes
                    cellMes.innerHTML = getDia(fechaFila)[1] 
                }
                /**noEncontrado se usa para borrar las ultimas filas que no tengan contenido
                noEncontrado puede valer desde 1 hasta el numero de franjas
                se borraran un dia completo si todas las franjas estan vacias
                **/
                let noEncontrado = 1;      
                for(let k=0; k<(period.franjas.length || sinFranjas); k++){
                    let row = tableBody.insertRow();
                    let cell0 = row.insertCell();
                    if(k===0){
                        cell0.classList.add("noBordeInferior")
                    }
                    else{
                        cell0.classList.add("noBorde");
                    }
                    //la fecha la pinto centrada
                    if(Math.trunc(period.franjas.length/2)===k){
                        cell0.innerHTML = getDia(fechaFila)[0]+ " " +fechaFila.split("/")[0];
                    }
                    let sinCoincidencias = true;              
                    for(let l=0; l<cursos.length; l++){
                        let cell = row.insertCell();
                        cell.innerHTML ="&nbsp"
                        let condicionFranja = sinFranjas === 1 ? "-" : ""+(+k+1)
                        let coincidencias = estadoExamenes.filter(
                        //me devuelve 8 y la bbdd de datos 08 por eso lo de 0+l
                        ex => (ex.fecha === fechaFila && Number(ex.curso)===Number(cursos[l]) && ex.franja === condicionFranja)
                        );
                        for (let m=0; m<coincidencias.length; m++){
                            if(m>0){
                                cell.innerHTML+= " / "+coincidencias[m].asignatura;
                            }else{
                                sinCoincidencias = false
                                cell.innerHTML+= coincidencias[m].asignatura;
                            }
                        }
                    }
                    if(sinCoincidencias) row.classList.add("noExamen"+(noEncontrado++))
                }       
 
            }

            fechaFila = aumentarDia(fechaFila,1)
        }
        //borro las últimas filas que no hay
        let n=tableBody.rows.length -1
        while(!ultimoEncontrado && n >= 0){
            if (tableBody.rows[n].classList.contains('noExamen')){
                tableBody.deleteRow(n);
                n--;
            }else if(tableBody.rows[n].classList.contains('noExamen'+numFranjas)){
                for (let p=0; p<numFranjas; p++){
                    tableBody.deleteRow(n);
                    n--;
                }
            }else{
                ultimoEncontrado = true;
            }
        }
        buttonCalendario.innerHTML = 'Modo Lista'
        tableDatos.style.display = "none";
        table.style.display = "block";
        
        buttonMoverCal.removeAttribute("title");
        buttonMoverCal.disabled = false;
    }else{
        buttonCalendario.innerHTML = 'Modo Calendario'
        tableDatos.style.display = "block";
        table.style.display = "none";

        buttonMoverCal.setAttribute("title", "Sólo en Modo Calendario");
        buttonMoverCal.disabled = true;
    }
}

function Volver(cancelarpath){
    activado = false;
    window.location.replace(cancelarpath);
}

function updateArraysCreate_Update_DeleteExamens(){
    createExamens = []
    updateExamens = []
    deleteExamens = []
    asignacionsExamen.forEach(period => {
        period.asignaturas.forEach(asignatura => {
            //los examenes que se eliminan son los que tenian id en la bbdd y ahora NO tienen fecha
            if(asignatura.examen && asignatura.examen.identificador !== null && !asignatura.examen.fecha){
                deleteExamens.push({
                    identificador: asignatura.examen.identificador
                });
            }
            //los examenes que se crean son los que NO tenian id en la bbdd y ahora tienen fecha
            if(asignatura.examen && asignatura.examen.identificador  === null && asignatura.examen.fecha){
                createExamens.push({
                    asignaturaIdentificador : asignatura.identificador,
                    periodo : period.periodo,
                    fecha : asignatura.examen.fecha,
                    horaInicio : asignatura.examen.horaInicio,
                    duracion : asignatura.examen.duracion
                })
            }
            //los examenes que se actualizan son los que  tenian id en la bbdd y tienen fecha y han cambiado de fecha/hora
            if (asignatura.examen && asignatura.examen.identificador  !== null && asignatura.examen.fecha && asignatura.examen.actualizar){
                updateExamens.push({
                    identificador: asignatura.examen.identificador,
                    fecha : asignatura.examen.fecha,
                    horaInicio: asignatura.examen.horaInicio,
                    duracion: asignatura.examen.duracion
                })
            }
        })
    })
}

function Guardar(nuevopath){

    updateArraysCreate_Update_DeleteExamens();
    activado = false;
    let rowsSolapan = document.getElementsByClassName('solapa').length;
    if (rowsSolapan > 0 && estadoProgDoc === estadosProgDoc.incidencia){
        alert("Hay exámenes que no encajan con ninguna de las franjas definidas o no tienen hora asignada, no puede guardar los exámenes hasta solucionarlo");
    }else{
        $.ajax({
            url: nuevopath,
            method: 'POST',
            dataType: "json",
            contentType: "application/json",
            data: JSON.stringify({
                createExamens,
                updateExamens,
                deleteExamens
            })
        }).done(function (res) {
            if (!res.success) {
                alert(res.msg)
            } else {
                window.scrollTo(0,0);
                location.reload();
            }
        })
        .fail(function (jqXHR, textStatus, errorThrown) {
            alert("Ha habido un error:" + jqXHR.status + " " + textStatus)
        })

}


}

function Enviar(aprobarpath){
    activado = false;
    updateArraysCreate_Update_DeleteExamens();
    let rowsSolapan = document.getElementsByClassName('solapa').length;
    if (rowsSolapan > 0){
        alert("Hay exámenes que no encajan con ninguna de las franjas definidas o no tienen hora asignada, no puede aprobar los exámenes hasta solucionarlo");
        return false;
    }else if(confirmarSalirSinGuardarArrays([createExamens,updateExamens,deleteExamens], true)){
        alert("Quedan exámenes sin guardar. Debe guardar o cancelar las últimas modificaciones antes de aprobar los exámenes")
    }else if (confirm("Una vez aprobados los exámenes no podrá modificarlos ¿Seguro que quiere aprobarlos?")){
        let form2 = document.getElementById("formulario");
        form2.setAttribute('action', aprobarpath);
        form2.submit();
    }else{
        activado = true;
        return false;
    }
    activado = true;
}

function cambiarFranjaExamen(id){
    let period = franjas.find(function (obj) { return obj.periodo === id.split("_")[2]; });
    let selectValue = document.getElementById("franja_"+id).value
    if(selectValue !== "-"){
        selectValue = +selectValue
        let hora = document.getElementById("hora_"+id);
        let minutos = document.getElementById("minutos_"+id);
        let duracion = document.getElementById("duracion_"+id);
        hora.value= period.franjas[+selectValue-1].horaInicio.split(":")[0];
        minutos.value = period.franjas[+selectValue-1].horaInicio.split(":")[1];
        duracion.value = period.franjas[+selectValue-1].duracion;
    }
   
    //debo comprobar que no solape si elige -
    isExamenInFranjas(id)
    Change2(id)

}

function cambiarSelectExamen(selectExamenespath){
    activado = true;
    window.location.replace(selectExamenespath);
}

function rotarExamenes(periodo) {
                                let sentidoInput = $( '#modal-rotar_' + periodo + ' input[name=' + periodo + '_sentido-rotacion]:checked' );
                                let sentido = sentidoInput[0].value;
                                let cursos = $( '#modal-rotar_' + periodo + ' input[name=' + periodo + '_cursos-rotacion]:checked' );

                                if (sentidoInput.length === 0 && cursos.length === 0) {
                                    alert("Por favor, seleccione el sentido de la rotación y al menos un curso.");
                                    return false;
                                } else if (sentidoInput.length === 0) {
                                    alert("Por favor, seleccione el sentido de la rotación.");
                                    return false;
                                } else if (cursos.length === 0) {
                                    alert("Por favor, seleccione al menos un curso.");
                                    return false;
                                }

                                cursos.each((indexCurso, elementCurso) => {
                                    let tds, exams;
                                    if (sentido === '1') {
                                        tds = $( 'table#table_calendario_' + periodo + ' tr td:nth-child(' + (parseInt(elementCurso.value) + 1) + ')' );
                                        exams = $( 'table#table_calendario_' + periodo + ' tr td:nth-child(' + (parseInt(elementCurso.value) + 1) + ')' ).clone();
                                    } else if (sentido === '0') {
                                        tds = $($( 'table#table_calendario_' + periodo + ' tr td:nth-child(' + (parseInt(elementCurso.value) + 1) + ')' ).get().reverse());
                                        exams = $($( 'table#table_calendario_' + periodo + ' tr td:nth-child(' + (parseInt(elementCurso.value) + 1) + ')' ).get().reverse())
                                            .clone();
                                    }

                                    let inicio = true;
                                    let primerIndex, primeraFecha, primeraHoraInicio, primeraFranja;
                                    let indexReplace;
                                            
                                    tds.each((indexExam, elementExam) => {
                                        if (elementExam.children.length > 0) {
                                            let titleAsigOld = exams.get(indexExam).children[0].getAttribute("title");
                                            let codigoAsigOld = titleAsigOld.substring(titleAsigOld.lastIndexOf("(") + 1, titleAsigOld.lastIndexOf(")"));
                                            let objetoAsignaturaOld = (asignacionsExamen.find(element => element.periodo === periodo)).asignaturas
                                                .find(asignatura => asignatura.codigo === codigoAsigOld);
                                            let objetoExamenOld = objetoAsignaturaOld.examen;

                                            if (inicio) {
                                                primerIndex = indexExam;
                                                if (objetoExamenOld.fecha.includes("-")) {
                                                    primeraFecha = moment(objetoExamenOld.fecha, "YYYY-MM-DD").format("DD/MM/YYYY");
                                                } else if (objetoExamenOld.fecha.includes ("/")) {
                                                    primeraFecha = objetoExamenOld.fecha;
                                                }
                                                primeraFranja = document
                                                    .getElementById("franja_" + objetoAsignaturaOld.identificador + "_" + objetoExamenOld.identificador +
                                                    "_" + periodo).value;
                                                primeraHoraInicio = objetoExamenOld.horaInicio;

                                                inicio = false;
                                            } else {
                                                while (elementExam.firstChild) {
                                                    elementExam.removeChild(elementExam.lastChild);
                                                }
                                                // Acutalizamos las fechas y horas de los exámenes a poner en la casilla actual a las nuevas;
                                                // también lo hacemos para los elementos del modo lista
                                                let primerSpan = true;
                                                for (let span of exams.get(indexReplace).children) {
                                                    let titleAsigReplace = span.getAttribute("title");
                                                    let codigoAsigReplace = titleAsigReplace.substring(titleAsigReplace.lastIndexOf("(") + 1, titleAsigReplace.lastIndexOf(")"));
                                                    let objetoAsignaturaReplace = (asignacionsExamen.find(element => element.periodo === periodo)).asignaturas
                                                        .find(asignatura => asignatura.codigo === codigoAsigReplace);

                                                    if (objetoExamenOld.fecha.includes("-")) {
                                                        objetoAsignaturaReplace.examen.fecha = moment(objetoExamenOld.fecha, "YYYY-MM-DD").format("DD/MM/YYYY");
                                                    } else if (objetoExamenOld.fecha.includes ("/")) {
                                                        objetoAsignaturaReplace.examen.fecha = objetoExamenOld.fecha;
                                                    }
                                                    document
                                                        .getElementById("date_" + objetoAsignaturaReplace.identificador + "_" + objetoAsignaturaReplace.examen.identificador +
                                                        "_" + periodo).value = objetoAsignaturaReplace.examen.fecha;
                                                    
                                                    document
                                                        .getElementById("franja_" + objetoAsignaturaReplace.identificador + "_" + objetoAsignaturaReplace.examen.identificador +
                                                        "_" + periodo).value = document
                                                        .getElementById("franja_" + objetoAsignaturaOld.identificador + "_" + objetoExamenOld.identificador +
                                                        "_" + periodo).value;

                                                    let subHoras = objetoAsignaturaOld.examen.horaInicio.split(":");
                                                    objetoAsignaturaReplace.examen.horaInicio = objetoExamenOld.horaInicio;
                                                    document
                                                        .getElementById("hora_" + objetoAsignaturaReplace.identificador + "_" + objetoAsignaturaReplace.examen.identificador +
                                                        "_" + periodo).value = subHoras[0];
                                                    document
                                                        .getElementById("minutos_" + objetoAsignaturaReplace.identificador + "_" + objetoAsignaturaReplace.examen.identificador +
                                                        "_" + periodo).value = subHoras[1];

                                                    objetoAsignaturaReplace.examen.actualizar = true;

                                                    if (primerSpan) {
                                                        elementExam.appendChild(span.cloneNode(true));
                                                        primerSpan = false;
                                                    } else {
                                                        elementExam.innerHTML += " / ";
                                                        elementExam.appendChild(span.cloneNode(true));
                                                    }
                                                }
                                            }

                                            indexReplace = indexExam;
                                        }
                                    });

                                    let primerElement;
                                    if (sentido === '1') {
                                        primerElement = $( 'table#table_calendario_' + periodo + ' tr td:nth-child(' + (parseInt(elementCurso.value) + 1) + ')' )
                                            .get(primerIndex);
                                    } else if (sentido === '0') {
                                        primerElement =  $($( 'table#table_calendario_' + periodo + ' tr td:nth-child(' + (parseInt(elementCurso.value) + 1) + ')' )
                                            .get().reverse()).get(primerIndex);
                                    }

                                    while (primerElement.firstChild) {
                                        primerElement.removeChild(primerElement.lastChild);
                                    }

                                    let primerSpan = true;
                                    for (span of exams.get(indexReplace).children) {
                                        let titleAsigReplace = span.getAttribute("title");
                                        let codigoAsigReplace = titleAsigReplace.substring(titleAsigReplace.lastIndexOf("(") + 1, titleAsigReplace.lastIndexOf(")"));
                                        let objetoAsignaturaReplace = (asignacionsExamen.find(element => element.periodo === periodo)).asignaturas
                                            .find(asignatura => asignatura.codigo === codigoAsigReplace);

                                        objetoAsignaturaReplace.examen.fecha = primeraFecha;
                                        document
                                            .getElementById("date_" + objetoAsignaturaReplace.identificador + "_" + objetoAsignaturaReplace.examen.identificador +
                                            "_" + periodo).value = objetoAsignaturaReplace.examen.fecha;
                                                    
                                        document
                                            .getElementById("franja_" + objetoAsignaturaReplace.identificador + "_" + objetoAsignaturaReplace.examen.identificador +
                                            "_" + periodo).value = primeraFranja;

                                        let subHoras = primeraHoraInicio.split(":");
                                        objetoAsignaturaReplace.examen.horaInicio = primeraHoraInicio;
                                        document
                                            .getElementById("hora_" + objetoAsignaturaReplace.identificador + "_" + objetoAsignaturaReplace.examen.identificador +
                                            "_" + periodo).value = subHoras[0];
                                        document
                                            .getElementById("minutos_" + objetoAsignaturaReplace.identificador + "_" + objetoAsignaturaReplace.examen.identificador +
                                            "_" + periodo).value = subHoras[1];

                                        objetoAsignaturaReplace.examen.actualizar = true;

                                        if (primerSpan) {
                                            primerElement.appendChild(span.cloneNode(true));
                                            primerSpan = false;
                                        } else {
                                            primerElement.innerHTML += " / ";
                                            primerElement.appendChild(span.cloneNode(true));
                                        }
                                    }
                                });

                                updateArraysCreate_Update_DeleteExamens();
                            }
                            
                            function desplazarExamenes(periodo) {
                                let diasInput = $( '#modal-desplazar_' + periodo + ' input[name=' + periodo + '_dias-desplazamiento]' ).val();
                                let dias = Number(diasInput);
                                let sentidoInput = $( '#modal-desplazar_' + periodo + ' input[name=' + periodo + '_sentido-desplazamiento]:checked' );
                                let sentido = sentidoInput[0].value;
                                let cursos = $( '#modal-desplazar_' + periodo + ' input[name=' + periodo + '_cursos-desplazamiento]:checked' );

                                if (diasInput === "" && sentidoInput.length === 0 && cursos.length === 0) {
                                    alert("Por favor, seleccione el número de días, el sentido del desplazamiento y al menos un curso.")
                                    return false;
                                } else if (diasInput === "" && sentidoInput.length === 0) {
                                    alert("Por favor, seleccione el número de días y el sentido del desplazamiento.")
                                    return false;
                                } else if (diasInput === "" && cursos.length === 0) {
                                    alert("Por favor, seleccione el número de días y al menos un curso.")
                                    return false;
                                } else if (sentidoInput.length === 0 && cursos.length === 0) {
                                    alert("Por favor, seleccione el sentido del desplazamiento y al menos un curso.")
                                    return false;
                                } else if (diasInput === "") {
                                    alert("Por favor seleccione el número de días.")
                                    return false;
                                } else if (sentidoInput.length === 0) {
                                    alert("Por favor, seleccione el sentido del desplazamiento.")
                                    return false;
                                } else if (cursos.length === 0) {
                                    alert("Por favor, seleccione al menos un curso.")
                                    return false;
                                }

                                cursos.each((indexCurso, elementCurso) => {
                                    let tds = $( 'table#table_calendario_' + periodo + ' tr td:nth-child(' + (parseInt(elementCurso.value) + 1) + ')' );
                                    let asigs = [];

                                    tds.each((indexExam, elementExam) => {
                                        if (elementExam.children.length > 0) {
                                            for (let span of elementExam.children) {
                                                let titleAsig = span.getAttribute("title");
                                                let codigoAsig = titleAsig.substring(titleAsig.lastIndexOf("(") + 1, titleAsig.lastIndexOf(")"));
                                                asigs.push((asignacionsExamen.find(element => element.periodo === periodo)).asignaturas
                                                    .find(asignatura => asignatura.codigo === codigoAsig));
                                            }
                                        }
                                    });

                                    asigs.forEach((asig) => {
                                        let fechaOld;
                                        if (asig.examen.fecha.includes("-")) {
                                            fechaOld = moment(asig.examen.fecha, "YYYY-MM-DD");
                                        } else if (asig.examen.fecha.includes ("/")) {
                                            fechaOld = moment(asig.examen.fecha, "DD/MM/YYYY");
                                        }
                                        let weekdayOld = fechaOld.day();
                                        let fechaNew;
                                        if (sentido === "1") {
                                            let weekendsDays;
                                            if (weekdayOld === 6) {
                                                weekendsDays = 2 * Math.floor((weekdayOld + dias - 6) / 7) + 1;
                                            } else {
                                                weekendsDays = 2 * Math.floor((weekdayOld + dias + 1) / 7);
                                            }
                                            fechaNew = fechaOld.add(dias + weekendsDays, 'days');
                                        } else if (sentido === "0") {
                                            let weekendsDays;
                                            if (weekdayOld === 0) {
                                                weekendsDays = 2 * Math.floor(dias / 7) + 1;
                                            } else {
                                                weekendsDays = 2 * Math.floor((dias - weekdayOld + 7) / 7);
                                            }
                                            fechaNew = fechaOld.subtract(dias + weekendsDays, 'days');
                                        }
                                        asig.examen.fecha = fechaNew.format("DD/MM/YYYY");
                                        asig.examen.actualizar = true;

                                        document
                                            .getElementById("date_" + asig.identificador + "_" + asig.examen.identificador +
                                            "_" + periodo).value = asig.examen.fecha;
                                    });
                                });

                                mostrarCalendario('calendario_' + periodo, true)
                                updateArraysCreate_Update_DeleteExamens();
                            }
                            
                            $('.modal-rotar').on('hidden.bs.modal', function () {
                                $( '.modal-rotar input[class=sentido-rotacion]:checked' ).each((index, sentido) => { sentido.checked = false });
                                $( '.modal-rotar input[class=cursos-rotacion]:checked' ).each((index, curso) => { curso.checked = false });
                            });
                            $('.modal-desplazar').on('hidden.bs.modal', function () {
                                $( '.modal-desplazar input[class=dias-desplazamiento]' ).each((index, dias) => { dias.value = 1 });
                                $( '.modal-desplazar input[class=sentido-desplazamiento]:checked' ).each((index, sentido) => { sentido.checked = false });
                                $( '.modal-desplazar input[class=cursos-desplazamiento]:checked' ).each((index, curso) => { curso.checked = false });
                            });

window.onbeforeunload = function(){
  updateArraysCreate_Update_DeleteExamens();
  //primero debes mirar que activado sea true o false (en confirmarSalirSinGuarar y despues marcarlo como true) 
  let confirma = confirmarSalirSinGuardarArrays([createExamens,updateExamens,deleteExamens], activado)
  activado = true
    //debo reinicializar esto por si le da a seguir en la página
  document.getElementById('selectPlan') ? document.getElementById('selectPlan').value = selectPlanValue : null;
  document.getElementById('selectDepartamento') ? document.getElementById('selectDepartamento').value = selectDepartamentoValue : null;
  document.getElementById('selectExamenes') ? document.getElementById('selectExamenes').value = 'Examenes' : null;
  return confirma;
}
</script>